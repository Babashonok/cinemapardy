apply plugin: 'groovy'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: "com.chrisgahlert.gradle-dcompose-plugin"

group = 'com.dev.babak'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "gradle.plugin.com.chrisgahlert:gradle-dcompose-plugin:0.9.2"
	}
}


repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

ext {
	springCloudVersion = 'Dalston.SR4'
}

jar {
	baseName = 'cinemaPardy'
	version = '0.0.1-SNAPSHOT'
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-aws-messaging')
	compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.hibernate:hibernate-core:5.2.12.Final')
	compile('org.codehaus.groovy:groovy')

	compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.1.0'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-sns', version: '1.11.109'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-sqs', version: '1.11.109'

	runtime('mysql:mysql-connector-java')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task copyDockerFiles(type: Copy){
	from 'build/libs/cinemaPardy-0.0.1-SNAPSHOT.jar', 'docker'
	into 'build/dockerfiles'

}
build.finalizedBy copyDockerFiles
dcompose {
	dockerClientConfig = {
		withDockerHost "tcp://192.168.99.100:2376"
		withApiVersion '1.23' //this is needed to work around a dropped method in docker version 1.12
	}
	mariadb {
		baseDir = file('build/dockerfiles')
		dockerFilename = 'Dockerfile-DB'
		exposedPorts = ['3306']
		portBindings = ['3306:3306']
		env = ['MYSQL_ROOT_PASSWORD=password', 'MYSQL_USER=app_user', 'MYSQL_PASSWORD=testpw1234', 'MYSQL_DATABASE=cinemapardy']
		attachStdout = true
		attachStderr = true
	}
	wiremock {
		image = 'rodolpheche/wiremock:latest'
		portBindings = ['9980:8080']
	}
	cinemaPardy {
		baseDir = file('build/dockerfiles')
		dockerFilename = 'DockerFile'
		exposedPorts = ['8082']
		portBindings = ['8082:8082']
		links = [mariadb.link()]
		attachStdout = true
		attachStderr = true
	}
}
